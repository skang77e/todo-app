{"version":3,"sources":["componenets/TodoTemplate.js","componenets/TodoInsert.js","componenets/TodoListItem.js","componenets/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoContainer","styled","div","Title","Content","TodoTemplate","children","className","TodoInsertForm","form","TodoInput","input","Button","button","TodoInsert","onInsert","useState","value","setValue","getInputValue","useCallback","e","target","submitTodo","preventDefault","onSubmit","onChange","placeholder","type","TodoListItem","todo","onRemove","onToggle","style","id","text","checked","ListContainer","ListItem","onClick","cn","React","memo","prevProps","nextProps","TodoList","todos","rowRenderer","index","key","minHeight","maxHeight","overflowY","outline","width","height","rowCount","length","rowHeight","list","createBulk","array","i","push","todoReducer","action","concat","filter","map","App","useReducer","undefined","dispatch","nextId","useRef","addToList","current","toggleCheckbox","removeFromList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33a0230e.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\n\nconst TodoTemplate = ({children}) => {\n    return (\n        <TodoContainer className=\"TodoTemplate\">\n            <Title className=\"app-title\">To do List</Title>\n            <Content className=\"content\">{children}</Content>\n        </TodoContainer>\n    )\n}\n\nconst TodoContainer = styled.div`\n    width: 512px;\n    margin-left:auto;\n    margin-right: auto;\n    margin-top:6rem;\n    border-radius:4px;\n    overflow: hidden;\n`\n\nconst Title = styled.div`\n    background: #22b8cf;\n    color:white;\n    height:4rem;\n    font-size: 1.5rem;\n    display: flex:\n    align-items: center;\n    justify-content: center;\n`\n\nconst Content = styled.div`\n    background:#fff;\n`\n\n\nexport default TodoTemplate\n","import React, {useState, useCallback} from 'react'\nimport { MdAdd } from \"react-icons/md\";\nimport styled from 'styled-components';\n\nconst TodoInsert = ({onInsert}) => {\n    const [value, setValue] = useState('');\n\n    const getInputValue = useCallback(e => {\n        setValue(e.target.value);\n    }, []);\n    const submitTodo = useCallback(\n        e => {\n            onInsert(value);\n            setValue('');\n\n            e.preventDefault();\n        },\n        [onInsert, value]        \n    )\n    return (\n        <TodoInsertForm onSubmit={submitTodo}>\n            <TodoInput value={value} onChange={getInputValue} placeholder=\"Type your todo\"/>\n            <Button type=\"submit\">\n                <MdAdd/>\n            </Button>\n        </TodoInsertForm>\n    )\n}\n\nconst TodoInsertForm = styled.form`\n    display:flex;\n    background: #495057;\n`\n\nconst TodoInput = styled.input`\n    background:none;\n    outline:none;\n    border:none;\n    padding: 0.5rem;\n    font-size:1.125rem;\n    line-height:1.5;\n    color:#fff;\n    &::placeholder{\n        color:#dee2e6;\n    }\n    flex:1;\n`\n\nconst Button = styled.button`\n    background:none;\n    outline:none;\n    border:none;\n    background:#868e96;\n    color:#fff;\n    padding-left:1rem;\n    padding-right:1rem;\n    font-size:1.5rem;\n    display:flex;\n    align-items:center;\n    cursor:pointer;\n    transition: 0.1s background ease-in;\n    &:hover{\n        background: #adb5bd;\n    }\n`\n\nexport default TodoInsert\n","import React from 'react'\nimport {MdCheckBoxOutlineBlank, MdCheckBox, MdRemoveCircleOutline} from 'react-icons/md';\nimport styled from 'styled-components';\nimport cn from 'classnames';\n\nconst TodoListItem = ({todo, onRemove, onToggle, style}) => {\n    const {id, text, checked} = todo;\n    return (\n        <ListContainer style={style}>\n            <ListItem>\n                <div onClick={() => onToggle(id)} className={cn('checkbox', {checked})}>\n                    {checked ? <MdCheckBox/> : <MdCheckBoxOutlineBlank/> }\n                    <div className=\"text\">{text}</div>\n                </div>\n                <div onClick={() => onRemove(id)} className=\"remove\">\n                    <MdRemoveCircleOutline/>\n                </div>\n            </ListItem>\n        </ListContainer>\n    )\n}\n\nconst ListContainer = styled.div`\n    &+&{\n        border-top: 1px solid #dee2e6;\n    }\n    &:nth-child(even){\n        background:#f8f9fa;\n    }\n`\n\nconst ListItem = styled.div`\n    padding:1rem;\n    display:flex;\n    align-items:center;\n    &:nth-child(even){\n        background:#f8f9fa;\n    }\n    .checkbox{\n        cursor:pointer;\n        flex:1;\n        display:flex;\n        align-items:center;\n        svg{\n            font-size:1.5rem;\n        }\n        .text{\n            margin-left: 0.5rem;\n            flex:1;\n        }\n        &.checked{\n            svg{\n                color:#22b8cf;\n            }\n            .text{\n                color:#adb5bd;\n                text-decoration: line-through;\n            }\n        }\n    }\n    .remove{\n        display:flex;\n        align-items: center;\n        font-size:1.5rem;\n        color:#ff6b6b;\n        cursor:pointer;\n        &:hover{\n            color:#ff8787;\n        }\n    }\n    &+&{\n        border-top: 1px solid #dee2e6;\n    }\n`\nexport default React.memo(TodoListItem, (prevProps, nextProps) => prevProps.todo === nextProps.todo,);","import React, {useCallback} from 'react'\nimport { List } from 'react-virtualized'\nimport TodoListItem from './TodoListItem'\n\nconst TodoList = ({todos, onRemove, onToggle}) => {\n    const rowRenderer = useCallback(\n        ({index, key, style}) => {\n            const todo = todos[index];\n            return (\n                <TodoListItem todo={todo} key={key} onRemove={onRemove} onToggle={onToggle} style={style}/>\n            );\n        },\n        [onRemove, onToggle, todos],\n    )\n\n    return (\n        <List\n            className=\"TodoList\"\n            style={{\n                minHeight:\"320px\",\n                maxHeight:\"513px\",\n                overflowY:\"auto\",\n                outline:\"none\"\n            }}\n            width={512}\n            height={513}\n            rowCount={todos.length}\n            rowHeight={57}\n            rowRenderer={rowRenderer}\n            list={todos}\n        />\n    )\n}\n\nexport default React.memo(TodoList)\n","import React, {useReducer, useRef, useCallback} from 'react';\nimport TodoTemplate from './componenets/TodoTemplate';\nimport TodoInsert from './componenets/TodoInsert';\nimport TodoList from './componenets/TodoList';\n\nfunction createBulk(){\n  const array=[];\n\n  for(let i=1; i < 2500; i++){\n    array.push({\n      id:i,\n      text:'Todo' + i,\n      checked: false,\n\n    });\n  }\n  return array;\n}\n\nfunction todoReducer(todos, action){\n  switch(action.type){\n    case 'INSERT':\n      return todos.concat(action.todo);\n    case 'REMOVE':\n      return todos.filter(todo => todo.id !== action.id);\n    case 'TOGGLE':\n      return todos.map(todo => todo.id === action.id ? {...todo, checked: !todo.checked} : todo);\n    default:\n      return todos;\n  }\n}\n\nconst App = () => {\n\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulk);\n\n  const nextId = useRef(2501);\n  const addToList = useCallback(text => {\n    const todo = {\n      id:nextId.current,\n      text,\n      checked: false\n    };\n    dispatch({type:'INSERT', todo});\n    nextId.current=+1;\n  },[]);\n\n  const toggleCheckbox = useCallback(id =>{\n    dispatch({type:'TOGGLE', id})\n  },[]);\n  // const addToList = useCallback(text => {\n  //   const todo = {\n  //     text,\n  //     checked: false\n  //   };\n  //   setTodos(todos.concat(todo));\n  // },[todos]);\n\n  const removeFromList = useCallback(id => {\n    dispatch({type:'REMOVE', id});\n  },[],);\n\n  return (\n    <div>\n      <TodoTemplate>\n        <TodoInsert onInsert={addToList}/>\n        <TodoList todos={todos} onRemove={removeFromList} onToggle={toggleCheckbox}/>\n      </TodoTemplate>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}