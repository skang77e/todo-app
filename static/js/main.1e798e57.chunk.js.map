{"version":3,"sources":["componenets/TodoTemplate.js","componenets/TodoInsert.js","componenets/TodoListItem.js","componenets/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoContainer","styled","div","Title","Content","TodoTemplate","children","className","TodoInsertForm","form","TodoInput","input","Button","button","TodoInsert","onInsert","useState","value","setValue","getInputValue","useCallback","e","target","submitTodo","preventDefault","onSubmit","onChange","placeholder","type","TodoListItem","todo","onRemove","onToggle","id","text","checked","ListItem","onClick","cn","React","memo","TodoList","todos","TodoListContainer","map","createBulk","array","i","push","todoReducer","action","concat","filter","App","useReducer","undefined","dispatch","nextId","useRef","addToList","current","toggleCheckbox","removeFromList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e798e57.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\n\nconst TodoTemplate = ({children}) => {\n    return (\n        <TodoContainer className=\"TodoTemplate\">\n            <Title className=\"app-title\">To do List</Title>\n            <Content className=\"content\">{children}</Content>\n        </TodoContainer>\n    )\n}\n\nconst TodoContainer = styled.div`\n    width: 512px;\n    margin-left:auto;\n    margin-right: auto;\n    margin-top:6rem;\n    border-radius:4px;\n    overflow: hidden;\n`\n\nconst Title = styled.div`\n    background: #22b8cf;\n    color:white;\n    height:4rem;\n    font-size: 1.5rem;\n    display: flex:\n    align-items: center;\n    justify-content: center;\n`\n\nconst Content = styled.div`\n    background:#fff;\n`\n\n\nexport default TodoTemplate\n","import React, {useState, useCallback} from 'react'\nimport { MdAdd } from \"react-icons/md\";\nimport styled from 'styled-components';\n\nconst TodoInsert = ({onInsert}) => {\n    const [value, setValue] = useState('');\n\n    const getInputValue = useCallback(e => {\n        setValue(e.target.value);\n    }, []);\n    const submitTodo = useCallback(\n        e => {\n            onInsert(value);\n            setValue('');\n\n            e.preventDefault();\n        },\n        [onInsert, value]        \n    )\n    return (\n        <TodoInsertForm onSubmit={submitTodo}>\n            <TodoInput value={value} onChange={getInputValue} placeholder=\"Type your todo\"/>\n            <Button type=\"submit\">\n                <MdAdd/>\n            </Button>\n        </TodoInsertForm>\n    )\n}\n\nconst TodoInsertForm = styled.form`\n    display:flex;\n    background: #495057;\n`\n\nconst TodoInput = styled.input`\n    background:none;\n    outline:none;\n    border:none;\n    padding: 0.5rem;\n    font-size:1.125rem;\n    line-height:1.5;\n    color:#fff;\n    &::placeholder{\n        color:#dee2e6;\n    }\n    flex:1;\n`\n\nconst Button = styled.button`\n    background:none;\n    outline:none;\n    border:none;\n    background:#868e96;\n    color:#fff;\n    padding-left:1rem;\n    padding-right:1rem;\n    font-size:1.5rem;\n    display:flex;\n    align-items:center;\n    cursor:pointer;\n    transition: 0.1s background ease-in;\n    &:hover{\n        background: #adb5bd;\n    }\n`\n\nexport default TodoInsert\n","import React from 'react'\nimport {MdCheckBoxOutlineBlank, MdCheckBox, MdRemoveCircleOutline} from 'react-icons/md';\nimport styled from 'styled-components';\nimport cn from 'classnames';\n\nconst TodoListItem = ({todo, onRemove, onToggle}) => {\n    const {id, text, checked} = todo;\n    return (\n        <ListItem>\n            <div onClick={() => onToggle(id)} className={cn('checkbox', {checked})}>\n                {checked ? <MdCheckBox/> : <MdCheckBoxOutlineBlank/> }\n                <div className=\"text\">{text}</div>\n            </div>\n            <div onClick={() => onRemove(id)} className=\"remove\">\n                <MdRemoveCircleOutline/>\n            </div>\n        </ListItem>\n    )\n}\n\nconst ListItem = styled.div`\n    padding:1rem;\n    display:flex;\n    align-items:center;\n    &:nth-child(even){\n        background:#f8f9fa;\n    }\n    .checkbox{\n        cursor:pointer;\n        flex:1;\n        display:flex;\n        align-items:center;\n        svg{\n            font-size:1.5rem;\n        }\n        .text{\n            margin-left: 0.5rem;\n            flex:1;\n        }\n        &.checked{\n            svg{\n                color:#22b8cf;\n            }\n            .text{\n                color:#adb5bd;\n                text-decoration: line-through;\n            }\n        }\n    }\n    .remove{\n        display:flex;\n        align-items: center;\n        font-size:1.5rem;\n        color:#ff6b6b;\n        cursor:pointer;\n        &:hover{\n            color:#ff8787;\n        }\n    }\n    &+&{\n        border-top: 1px solid #dee2e6;\n    }\n`\nexport default React.memo(TodoListItem)\n","import React from 'react'\nimport TodoListItem from './TodoListItem'\nimport styled from 'styled-components'\n\nconst TodoList = ({todos, onRemove, onToggle}) => {\n    return (\n        <TodoListContainer>\n            {todos.map((todo) => <TodoListItem todo={todo} key={todo.id} onToggle={onToggle} onRemove={onRemove}/>\n            )}\n        </TodoListContainer>\n    )\n}\n\nconst TodoListContainer = styled.div`\n    min-height:320px;\n    max-height:513px;\n    overflow-y:auto;\n`\nexport default React.memo(TodoList)\n","import React, {useReducer, useRef, useCallback} from 'react';\nimport TodoTemplate from './componenets/TodoTemplate';\nimport TodoInsert from './componenets/TodoInsert';\nimport TodoList from './componenets/TodoList';\n\nfunction createBulk(){\n  const array=[];\n\n  for(let i=1; i < 2500; i++){\n    array.push({\n      id:i,\n      text:'Todo' + i,\n      checked: false,\n\n    });\n  }\n  return array;\n}\n\nfunction todoReducer(todos, action){\n  switch(action.type){\n    case 'INSERT':\n      return todos.concat(action.todo);\n    case 'REMOVE':\n      return todos.filter(todo => todo.id !== action.id);\n    case 'TOGGLE':\n      return todos.map(todo => todo.id === action.id ? {...todo, checked: !todo.checked} : todo);\n    default:\n      return todos;\n  }\n}\n\nconst App = () => {\n\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulk);\n\n  const nextId = useRef(2501);\n  const addToList = useCallback(text => {\n    const todo = {\n      id:nextId.current,\n      text,\n      checked: false\n    };\n    dispatch({type:'INSERT', todo});\n    nextId.current=+1;\n  },[]);\n\n  const toggleCheckbox = useCallback(id =>{\n    dispatch({type:'TOGGLE', id})\n  },[]);\n  // const addToList = useCallback(text => {\n  //   const todo = {\n  //     text,\n  //     checked: false\n  //   };\n  //   setTodos(todos.concat(todo));\n  // },[todos]);\n\n  const removeFromList = useCallback(id => {\n    dispatch({type:'REMOVE', id});\n  },[],);\n\n  return (\n    <div>\n      <TodoTemplate>\n        <TodoInsert onInsert={addToList}/>\n        <TodoList todos={todos} onRemove={removeFromList} onToggle={toggleCheckbox}/>\n      </TodoTemplate>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}